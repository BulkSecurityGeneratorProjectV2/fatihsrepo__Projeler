
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Fatih
 */
public class Sorgu extends javax.swing.JFrame {

    /**
     * Creates new form Sorgu
     */
    public Sorgu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sorgu");
        setLocation(new java.awt.Point(740, 20));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(153, 153, 153));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 530, 200));

        jPanel1.setBackground(new java.awt.Color(54, 33, 89));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikonlar/sorgu gönder.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 50, 50));

        jLabel4.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("SONUCU GÖNDER");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 170, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 530, 90));

        jPanel2.setBackground(new java.awt.Color(122, 72, 221));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikonlar/if_button-cross_blue_68681.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 60, 60));

        jLabel2.setFont(new java.awt.Font("MS UI Gothic", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("SUNUCU - SORGU");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ikonlar/sunucu icon.png"))); // NOI18N
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 70, 60));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 80));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        try {
            //Sınırları dosyadan okuyup quadtree oluşturuyorum
            BufferedReader  br1 = new BufferedReader(new FileReader("C:\\Users\\Fatih\\Documents"
                    + "\\NetBeansProjects\\Gezinge_Sunucu_Indirgeme\\sinirlar.txt"));
            String line1 = br1.readLine();
            String[] parcalar1=line1.split(" ");
            min_lat=Double.parseDouble(parcalar1[0]);
            min_long=Double.parseDouble(parcalar1[1]);
            max_lat=Double.parseDouble(parcalar1[2]);
            max_long=Double.parseDouble(parcalar1[3]);
            
            quadtree = new QuadTree(1, new Sinirlar(min_lat, min_long, max_lat, max_long));
            
            quadtree.Islem();
        } catch (IOException ex) {
            Logger.getLogger(Sorgu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sorgu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sorgu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sorgu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sorgu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sorgu().setVisible(true);
            }
        });
    }

    
QuadTree quadtree;
static double[][] icerideki_noktalar = new double[50][50];
static int i=0;
static double min_lat,min_long,max_lat,max_long;

public class Dugum {
	double x, y, value;

	Dugum(double x, double y, double value) {
		this.x = x;
		this.y = y;
		this.value = value;  
	}
}

public class Sinirlar {
	public double getxMin() {
		return xMin;
	}

	public double getyMin() {
		return yMin;
	}

	public double getxMax() {
		return xMax;
	}

	public double getyMax() {
		return yMax;
	}

	public Sinirlar(double xMin, double yMin, double xMax, double yMax) {
		super();
		/*
		 *  Storing two diagonal points 
		 */
		this.xMin = xMin;
		this.yMin = yMin;
		this.xMax = xMax;
		this.yMax = yMax;
	}

	public boolean araliktaMi(double x, double y) {
		return (x >= this.getxMin() && x <= this.getxMax()
				&& y >= this.getyMin() && y <= this.getyMax());
	}

	double xMin, yMin, xMax, yMax;

}

public class QuadTree {
	final int MAX_CAPACITY =4;
	int level = 0;
	List<Dugum> dugumler;
	QuadTree kuzeyBati = null;
	QuadTree kuzeyDogu = null;
	QuadTree güneyBati = null;
	QuadTree güneyDogu = null;
	Sinirlar sinirlar;
        
        QuadTree(int level, Sinirlar boundry) {
		this.level = level;
		dugumler = new ArrayList<Dugum>();
		this.sinirlar = boundry;
	}

	// Derin öncelikli arama ile graf dolaşılıyor
	void dfs(QuadTree tree) {
		if (tree == null)
			return;

		System.out.printf("\nLevel = %d [X1=%f Y1=%f] \t[X2=%f Y2=%f] ",
				tree.level, tree.sinirlar.getxMin(), tree.sinirlar.getyMin(),
				tree.sinirlar.getxMax(), tree.sinirlar.getyMax());

		for (Dugum node : tree.dugumler) {
			System.out.printf(" \n\t  x=%f y=%f", node.x, node.y);
                        icerideki_noktalar[i][0]=node.x;
                        icerideki_noktalar[i][1]=node.y;
                        i++;
		}
		if (tree.dugumler.size() == 0) {
			System.out.printf(" \n\t  Yaprak dugum.");
		}
		dfs(tree.kuzeyBati);
		dfs(tree.kuzeyDogu);
		dfs(tree.güneyBati);
		dfs(tree.güneyDogu);

	}

	void bol(double x, double y) {
		double xOffset = this.sinirlar.getxMin()
				+ (this.sinirlar.getxMax() - this.sinirlar.getxMin()) / 2.0;
		double yOffset = this.sinirlar.getyMin()
				+ (this.sinirlar.getyMax() - this.sinirlar.getyMin()) / 2.0;

		kuzeyBati = new QuadTree(this.level + 1, new Sinirlar(
				this.sinirlar.getxMin(), yOffset, xOffset,
				this.sinirlar.getyMax()));
		
                kuzeyDogu = new QuadTree(this.level + 1, new Sinirlar(xOffset,
				yOffset, this.sinirlar.getxMax(), this.sinirlar.getyMax()));
		
                güneyBati = new QuadTree(this.level + 1, new Sinirlar(
				this.sinirlar.getxMin(), this.sinirlar.getyMin(), xOffset,
				yOffset));
		
                güneyDogu = new QuadTree(this.level + 1, new Sinirlar(xOffset, this.sinirlar.getyMin(),
				this.sinirlar.getxMax(), yOffset));

	}

	void ekle(double x, double y, int value) {
		if (!this.sinirlar.araliktaMi(x, y)) {
			return;
		}

		Dugum node = new Dugum(x, y, value);
		if (dugumler.size() < MAX_CAPACITY) {
			dugumler.add(node);
			return;
		}
		// Exceeded the capacity so split it in FOUR
		if (kuzeyBati == null) {
			bol(x,y);
		}

		// Check coordinates belongs to which partition 
		if (this.kuzeyBati.sinirlar.araliktaMi(x, y))
			this.kuzeyBati.ekle(x, y, value);
		else if (this.kuzeyDogu.sinirlar.araliktaMi(x, y))
			this.kuzeyDogu.ekle(x, y, value);
		else if (this.güneyBati.sinirlar.araliktaMi(x, y))
			this.güneyBati.ekle(x, y, value);
		else if (this.güneyDogu.sinirlar.araliktaMi(x, y))
			this.güneyDogu.ekle(x, y, value);
		else
			System.out.printf("ERROR : eklenmedi.. %f %f", x, y);
	}

	void Islem() throws FileNotFoundException, IOException {
	

            // Ham veriyi dosyadan okuyup elemanları quadtreeye ekliyoruz
            BufferedReader  br = new BufferedReader(new FileReader("C:\\Users\\Fatih\\Documents"
                    + "\\NetBeansProjects\\Gezinge_Sunucu_Indirgeme\\gelen_ham_veri.txt"));
            
            String line = br.readLine();
            
            while (line != null) {
                String[] parcalar=line.split(" ");
                if(!parcalar[0].equals(" "))
                quadtree.ekle(Double.parseDouble(parcalar[0]), Double.parseDouble(parcalar[1]), 1);
                line = br.readLine();
            }
            br.close();
            
            
            for(int j=0;j<50;j++){
                icerideki_noktalar[j][0]=-1;icerideki_noktalar[j][1]=-1;
            }            
            
            
            //grafta dolaşılıyor
            dfs(quadtree);
	
            System.out.println("");
            System.out.println("");
                
            for(int i=0;i<50;i++){
                if(icerideki_noktalar[i][0] != -1 && icerideki_noktalar[i][1] !=-1)
                   jTextArea1.append(icerideki_noktalar[i][0]+"  "+icerideki_noktalar[i][1]+"\n" );
                else
                   break;
            }
            
            //iceride kalan noktaları önce indirgeme servisine oradan da istemciye gönderiyorum
            //indirgeme servisinin okyabilmesi için dosyaya yazdırıyorum
            PrintWriter writer = new PrintWriter("iceride_kalan_noktalar.txt", "UTF-8");
        
            for(int i=0;i<50;i++){
                if(icerideki_noktalar[i][0] != -1 && icerideki_noktalar[i][1] !=-1)
                   writer.println(icerideki_noktalar[i][0]+" "+icerideki_noktalar[i][1]+"\n");
                else
                   break;
            }
            writer.close();        
               
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
